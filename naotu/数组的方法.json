{
  "root": {
    "data": {
      "id": "31770e3827dc",
      "created": 1521524622,
      "text": "数组的方法",
      "expandState": "expand"
    },
    "children": [
      {
        "data": {
          "id": "bk5jgwhzt8w0",
          "created": 1521524636509,
          "text": "栈方法 (操作最后一项)",
          "layout": null,
          "expandState": "expand",
          "priority": null
        },
        "children": [
          {
            "data": {
              "id": "bk5jh3kwq140",
              "created": 1521524651923,
              "text": "push(item)",
              "note": "往数组末尾添加项,返回备操作之后的数组的长度",
              "layout": null,
              "expandState": "expand",
              "priority": 1
            },
            "children": []
          },
          {
            "data": {
              "id": "bk5jh89hlzk0",
              "created": 1521524662116,
              "text": "pop()",
              "note": "，该方法不能传入参数，作用是将数组的最后一项弹出。返回被弹出的项",
              "layout": null,
              "expandState": "expand",
              "priority": 1
            },
            "children": []
          }
        ]
      },
      {
        "data": {
          "id": "bk5jiqlem740",
          "created": 1521524780383,
          "text": "对列方法（操作第一项）",
          "layout_right_offset": {
            "x": -1.0000000281767427,
            "y": 12.000000338120895
          },
          "layout": null,
          "expandState": "expand",
          "priority": null
        },
        "children": [
          {
            "data": {
              "id": "bk5jiv678nk0",
              "created": 1521524790347,
              "text": "shift()",
              "note": "将数组的第一项推出，返回被移出的项",
              "layout": null,
              "expandState": "expand",
              "priority": 2
            },
            "children": []
          },
          {
            "data": {
              "id": "bk5jj0hwtbc0",
              "created": 1521524801939,
              "text": "unshift()",
              "note": "向数组开头插入一项，返回值是被操作之后的数组的长度",
              "layout": null,
              "expandState": "expand",
              "priority": 2
            },
            "children": []
          }
        ]
      },
      {
        "data": {
          "id": "bk5joez77ao0",
          "created": 1521525225281,
          "text": "排序方法",
          "layout": null,
          "expandState": "expand"
        },
        "children": [
          {
            "data": {
              "id": "bk5joha484w0",
              "created": 1521525230294,
              "text": "reverse()",
              "layout": null,
              "expandState": "expand",
              "priority": 3
            },
            "children": [
              {
                "data": {
                  "id": "bk5jp9sktuo0",
                  "created": 1521525292360,
                  "text": "对数组进行反转",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              }
            ]
          },
          {
            "data": {
              "id": "bk5joo1j2y00",
              "created": 1521525245013,
              "text": "sort(callback)",
              "layout": null,
              "expandState": "expand",
              "priority": 4
            },
            "children": [
              {
                "data": {
                  "id": "bk5jplsng7s0",
                  "created": 1521525318486,
                  "text": "自定义排序",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              }
            ]
          }
        ]
      },
      {
        "data": {
          "id": "bk65dq8bf680",
          "created": 1521586452189,
          "text": "操作方法",
          "layout": null,
          "expandState": "expand"
        },
        "children": [
          {
            "data": {
              "id": "bk65du2qbmg0",
              "created": 1521586460558,
              "text": "concat()",
              "layout": null,
              "note": "基于当前数组中的所有项创建一个新数组",
              "expandState": "expand",
              "priority": 2
            },
            "children": []
          },
          {
            "data": {
              "id": "bk65lf0290g0",
              "created": 1521587054658,
              "text": "slice()",
              "layout": null,
              "note": "它能够基于当前数组中的一项或多项创建一个新数组",
              "expandState": "expand",
              "priority": 2
            },
            "children": []
          },
          {
            "data": {
              "id": "bk65og0fa5c0",
              "created": 1521587291949,
              "text": "splice()",
              "layout": null,
              "expandState": "expand",
              "priority": 1
            },
            "children": [
              {
                "data": {
                  "id": "bk65oipv3wo0",
                  "created": 1521587297841,
                  "text": "删除任意数量的项",
                  "note": "指定2个参数：要删除的第一项的位置和要删除的项数",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              },
              {
                "data": {
                  "id": "bk65pc5knbc0",
                  "created": 1521587361918,
                  "text": "向任意位置插入任意数量的项",
                  "note": "指定3个参数：起始位置、0（要删除的项数）和要插入的项（可以是多个）",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              },
              {
                "data": {
                  "id": "bk65q8edkyo0",
                  "created": 1521587432107,
                  "text": "向指定位置插入任意数量的项，且同时删除任意数量的项",
                  "note": "`splice(2,1,\"red\",\"green\")`：删除位置2的项，然后再从位置2开始插入字符串 `\"red\"` 和 `\"green\"`",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              }
            ]
          }
        ]
      },
      {
        "data": {
          "id": "bk5jrf117og0",
          "created": 1521525460484,
          "text": "数组转字符串",
          "layout": null,
          "layout_right_offset": {
            "x": -13.9999995827676,
            "y": 81.99999755620965
          },
          "expandState": "expand"
        },
        "children": [
          {
            "data": {
              "id": "bk5jrj3l0600",
              "created": 1521525469345,
              "text": "join",
              "layout": null,
              "expandState": "expand",
              "priority": 1
            },
            "children": [
              {
                "data": {
                  "id": "bk5jrkq22i80",
                  "created": 1521525472881,
                  "text": "join()//=>item1,item2,item3",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              },
              {
                "data": {
                  "id": "bk5jrwbnkko0",
                  "created": 1521525498131,
                  "text": "join('')//=>item1item2item3",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              },
              {
                "data": {
                  "id": "bk5js4rl5cw0",
                  "created": 1521525516509,
                  "text": "join('-')//=>item1-item2-item3",
                  "layout": null,
                  "expandState": "expand"
                },
                "children": []
              }
            ]
          }
        ]
      },
      {
        "data": {
          "id": "bk65vljt2o80",
          "created": 1521587852554,
          "text": "位置方法 ES5",
          "layout_right_offset": {
            "x": -8.999999731779127,
            "y": -88.99999734759349
          },
          "expandState": "expand"
        },
        "children": [
          {
            "data": {
              "id": "bk65vss54400",
              "created": 1521587868296,
              "text": "indexOf()",
              "note": "## 参数\n\n1. 要查找的项\n2. 表示查找起始点的位置的索引（可选）\n\n## 作用\n\n从数组的开头（位置0）开始向后查找\n\n## 返回值\n\n`indexOf()`返回要查找的项在数组中的位置，或在没有找到的情况下返回-1。\n\n## 注意\n\n在比较第一个参数与数组中的每一项时，会使用全等操作符；也就是说，要查找的项必须严格相等（就像使用===一样）。",
              "expandState": "expand",
              "priority": 1
            },
            "children": []
          },
          {
            "data": {
              "id": "bk65wj5p8dc0",
              "created": 1521587925712,
              "text": "lastIndexOf()",
              "note": "## 参数\n\n1. 要查找的项\n2. 表示查找起始点的位置的索引（可选）\n\n## 作用\n\n从数组的末尾（位置length-1）开始向后查找\n\n## 返回值\n\n`lastIndexOf()`返回要查找的项在数组中的位置，或在没有找到的情况下返回-1。\n\n## 注意\n\n在比较第一个参数与数组中的每一项时，会使用全等操作符；也就是说，要查找的项必须严格相等（就像使用===一样）。",
              "expandState": "expand",
              "priority": 2
            },
            "children": []
          }
        ]
      },
      {
        "data": {
          "id": "bk663iuqb7s0",
          "created": 1521588473598,
          "text": "迭代方法 ES5"
        },
        "children": [
          {
            "data": {
              "id": "bk663rs8x7c0",
              "created": 1521588493039,
              "text": "every()",
              "note": "## 参数\n\n1. 要在每一项上运行的函数\n\n该函数会接收三个参数：数组项的值、该项在数组中的位置和数组本身\n\n2. 运行该函数的作用域对象-影响 this 的值。（可选）\n\n如果你想传递作用域，直接使用 ES6 的语法会更好：\n\n```js\narrary.every((item,index,arrary)=>{})\n```\n\n## 作用\n\n对数组中的每一项运行给定的函数，如果该函数对每一项都返回 `true`，则返回 `true`。\n\n## 注意\n\n对于 `every()` 方法，传入的函数必须对每一项都返回 `true`，这个方法才返回 `true`，否则，它就返回 `false`。\n\n## 示例\n",
              "priority": 3
            },
            "children": []
          },
          {
            "data": {
              "id": "bk6695a9e8o0",
              "created": 1521588914247,
              "text": "some()",
              "note": "## 参数\n\n1. 要在每一项上运行的函数\n\n该函数会接收三个参数：数组项的值、该项在数组中的位置和数组本身\n\n2. 运行该函数的作用域对象-影响 this 的值。（可选）\n\n如果你想传递作用域，直接使用 ES6 的语法会更好：\n\n```js\narrary.some((item,index,arrary)=>{})\n```\n\n\n## 作用\n\n对数组中的每一项运行给定的函数，如果该函数对任意项返回 `true`，则返回 `true`。\n\n## 注意\n\n1. 对 `some()` 方法而言只要传入的函数对数组的某一项返回 `true`,它就会返回 `true`。\n2. 该方法不会修改数组中包含的值\n\n## 示例",
              "priority": 3
            },
            "children": []
          },
          {
            "data": {
              "id": "bk66e0bdwdk0",
              "created": 1521589295253,
              "text": "filter()",
              "note": "## 参数\n\n1. 要在每一项上运行的函数\n\n该函数会接收三个参数：数组项的值、该项在数组中的位置和数组本身\n\n2. 运行该函数的作用域对象-影响 this 的值。（可选）\n\n如果你想传递作用域，直接使用 ES6 的语法会更好：\n\n```js\narrary.filter((item,index,arrary)=>{})\n```\n\n## 作用\n\n对数组中的每一项运行给定函数，返回该函数会返回 `true` 的项组成的数组。\n\n## 注意\n\n1. 该方法不会修改数组中包含的值\n\n## 示例",
              "priority": 1
            },
            "children": []
          },
          {
            "data": {
              "id": "bk66i2ivi000",
              "created": 1521589613515,
              "text": "forEach()",
              "note": "## 参数\n\n1. 要在每一项上运行的函数\n\n该函数会接收三个参数：数组项的值、该项在数组中的位置和数组本身\n\n2. 运行该函数的作用域对象-影响 this 的值。（可选）\n\n如果你想传递作用域，直接使用 ES6 的语法会更好：\n\n```js\narrary.forEach((item,index,arrary)=>{})\n```\n\n## 作用\n\n对数组中的每一项运行给定函数。这个函数没有返回值\n\n## 注意\n\n1. 该方法不会修改数组中包含的值\n2. 这个方法更加纯粹，可以用来代替for循环，使用频率最高。\n\n## 示例",
              "priority": 1
            },
            "children": []
          },
          {
            "data": {
              "id": "bk66kuxxoy80",
              "created": 1521589832104,
              "text": "map()",
              "priority": 2,
              "note": "## 参数\n\n1. 要在每一项上运行的函数\n\n该函数会接收三个参数：数组项的值、该项在数组中的位置和数组本身\n\n2. 运行该函数的作用域对象-影响 this 的值。（可选）\n\n如果你想传递作用域，直接使用 ES6 的语法会更好：\n\n```js\narrary.map((item,index,arrary)=>{})\n```\n\n## 作用\n\n对数组中的每一项运行给定函数。返回每次函数调用的结果组成的数组。\n\n## 注意\n\n1. 该方法不会修改数组中包含的值\n2. 这个方法更加纯粹，可以用来代替for循环，使用频率最高。\n\n## 示例"
            },
            "children": []
          }
        ]
      },
      {
        "data": {
          "id": "bk66nne8xj40",
          "created": 1521590050768,
          "text": "归并方法 ES5"
        },
        "children": [
          {
            "data": {
              "id": "bk66nsmirnc0",
              "created": 1521590062153,
              "text": "reduce()",
              "priority": 4
            },
            "children": []
          },
          {
            "data": {
              "id": "bk66nw3fzhk0",
              "created": 1521590069706,
              "text": "reduceRight()",
              "priority": 4
            },
            "children": []
          }
        ]
      }
    ]
  },
  "template": "default",
  "theme": "fresh-purple-compat",
  "version": "1.4.43"
}
